#!/bin/bash
# if mirrors exists, cat it, otherwise create it
destdir="/etc/pacman.d/mirrorlist"

function get_mirrors () #{{{1
{
          #curl -LksS -o - 'https://www.archlinux.org/mirrors/status/json/' | \
          #sed 's,{,\n{,g' | sed -n '/rsync/d; /pct": 1.0/p' | sed 's,^.*"url": "\([^"]\+\)".*,\1,g' > $MIRRORS
          MIRRORS=$(curl -LksS -o - 'https://www.archlinux.org/mirrors/status/json/' | \
          sed 's,{,\n{,g' | sed -n '/rsync/d; /pct": 1.0/p' | sed 's,^.*"url": "\([^"]\+\)".*,\1,g')
          #cat $MIRRORS;
          #echo "$MIRRORS" >> "$destdir"
}

function get_core_urls () #{{{1
{
   #get_mirrors | sed "s,$,core/os/${ARCH}/core.db.tar.gz,g"
   "$MIRRORS" | sed "s,$,core/os/${ARCH}/core.db.tar.gz,g"
}

function get_gcc_urls () #{{{1
{
   "$MIRRORS" | sed "s,$,core/os/${ARCH}/${GCC_URL},g"
}

# rm tmp file on exit
trap "exitcode=\$?; (rm -f \$MIRRORS 2>/dev/null;) && exit \$exitcode" 0;
trap "exit 1" 1 2 13 15;

# file containing mirror urls
#MIRRORS=`(mktemp -t reflector-mirrorsXXXX) 2>/dev/null` && test -w "$MIRRORS" || MIRRORS=~/reflector.mirrorsXXX
MIRRORS=$(curl -LksS -o - 'https://www.archlinux.org/mirrors/status/json/' | \
          sed 's,{,\n{,g' | sed -n '/rsync/d; /pct": 1.0/p' | sed 's,^.*"url": "\([^"]\+\)".*,\1,g')

# arch
ARCH=`(uname -m) 2>/dev/null` || ARCH=x86_64

# the gcc file


#echo "$GCC_URL" | $destdir 

exit $?;
