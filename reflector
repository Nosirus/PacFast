#!/bin/bash
# if mirrors exists, cat it, otherwise create it
PacmanMirrorlist="/etc/pacman.d/mirrorlist"

function get_mirrors () #{{{1
{
          #curl -LksS -o - 'https://www.archlinux.org/mirrors/status/json/' | \
          #sed 's,{,\n{,g' | sed -n '/rsync/d; /pct": 1.0/p' | sed 's,^.*"url": "\([^"]\+\)".*,\1,g' > $MIRRORS
          MIRRORS=$(curl -LksS -o - 'https://www.archlinux.org/mirrors/status/json/' | \
          sed 's,{,\n{,g' | sed -n '/rsync/d; /pct": 1.0/p' | sed 's,^.*"url": "\([^"]\+\)".*,\1,g')
          #cat $MIRRORS;
          #echo "$MIRRORS" >> "$destdir"
}

function get_core_urls () #{{{1
{
   #get_mirrors | sed "s,$,core/os/${ARCH}/core.db.tar.gz,g"
   echo "$MIRRORS" | sed "s,$,core/os/${ARCH}/core.db.tar.gz,g"
}

function get_gcc_urls () #{{{1
{
   echo "$MIRRORS" | sed "s,$,core/os/${ARCH}/${GCC_URL},g"
}

# rm tmp file on exit
#trap "exitcode=\$?; (rm -f \$MIRRORS 2>/dev/null;) && exit \$exitcode" 0;
#trap "exit 1" 1 2 13 15;

On_White='\e[1;30;107m'
On_Green='\e[1;97;42m'
echo -e "\n\e ${On_Green} PacFast ${On_White} Gets the fastest 40 servers \e[0m"
echo "Please wait..."


# var containing mirror urls
MIRRORS=$(curl -LksS -o - 'https://www.archlinux.org/mirrors/status/json/' | \
          sed 's,{,\n{,g' | sed -n '/rsync/d; /pct": 1.0/p' | sed 's,^.*"url": "\([^"]\+\)".*,\1,g')

# arch
ARCH=`(uname -m) 2>/dev/null` || ARCH=x86_64

# the gcc file
GCC_URL=$( curl -LksSH --url ftp://ftp.archlinux.org/core/os/${ARCH}/ 2>/dev/null | sed -n 's/^.*\ \(gcc-[0-9]\+.*.tar.xz.sig\)\ -.*$/\1/gp' );

{
   # faster as primarily used to pre-resolve dns for 2nd core test
   get_gcc_urls | xargs -I'{}' -P40 curl -Lks -o /dev/null -m 3 --retry 0 --no-keepalive -w '%{time_total}@%{speed_download}@%{url_effective}\n' --url '{}' |\
   sort -t@ -k2 -nr | head -n 50 | cut -d'@' -f3 | sed 's,core/os/'"${ARCH}/${GCC_URL}"',$repo/os/$arch,g'

   get_core_urls | xargs -I'{}' -P10 curl -Lks -o /dev/null -m 5 --retry 0 --no-keepalive -w '%{time_total}@%{speed_download}@%{url_effective}\n' --url '{}' |\
   sort -t@ -k2 -nr | head -n 50 | cut -d'@' -f3 | sed 's,core/os/'"${ARCH}"'/core.db.tar.gz,$repo/os/$arch,g'
} | sed 's,^,Server = ,g' | tee $PacmanMirrorlist # | awk '{ if (!h[$0]) { print $0; h[$0]=1 } }'

printf "%s\r%s%s" abcdefghijklmnopqrstuvwxyz $(tput el) "Finished"

exit 1
#exit $?;
