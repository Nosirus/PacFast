#!/bin/bash

CACHE=$(pacman-conf Cachedir)
SED='s/-S//g;s/yyu/Update system/g;s/-b . yw//g;s/--noconfirm//g;s/--needed//g'
ARIA2C="-d "$CACHE" -Z -c -s4 -k5M -x10 -j10 -t10 \
	--console-log-level=error --download-result=hide  --file-allocation=falloc --summary-interval=0 --retry-wait=0"

trap ctrl_c INT

function ctrl_c() {
  clean
  exit 0
}

function clean() {
  find "$CACHE" -type f -name "*.aria2" | while read f ; do
  name=$(basename "$f" .aria2)
  rm -f "$CACHE$name" "$f" #2>/dev/null #"$LIST"
  done
}

function center() {
  termwidth="$(tput cols)"
  padding="$(printf '%0.1s' -{1..500})"
  printf '%*.*s %s %*.*s\n' 0 "$(((termwidth-2-${#1})/2))" "$padding" "$1" 0 "$(((termwidth-1-${#1})/2))" "$padding"
}

function color() {
for fgbg in 38 48 ; do # Foreground / Background
    for color in {0..255} ; do # Colors
        # Display the color
        printf "\e[${fgbg};5;%sm  %3s  \e[0m" $color $color
        # Display 6 colors per lines
        if [ $((($color + 1) % 6)) == 4 ] ; then
            echo # New line
        fi
    done
    echo # New line
done
exit 0
}

log_msg() {
    RED=$(tput setaf 2)
    GREEN=$(tput setaf 2)
    NORMAL=$(tput sgr0)
    MSG="$1"
    STATUS="[OK]"
    STATUSCOLOR="$GREEN${STATUS}$NORMAL"
    let COL=$(tput cols)-${#MSG}+${#STATUSCOLOR}-${#STATUS}

    echo -n $MSG
    printf "%${COL}s"  "$STATUSCOLOR"
}

if ping -c 1 -W 1 8.8.8.8 2>/dev/null | grep -q -i "ttl"; then
  ARIA2C="$ARIA2C --async-dns-server=8.8.8.8"
fi

if [ "$OSTYPE" = "linux-gnu" ]; then
	[ "`whoami`" = "root" ] || exec sudo "$0" "$@"
fi

if [ $(command -v pacman) ] && echo "$@" | grep -q "\-S"; then
  [ $(command -v aria2c) ] || pacman -S --noconfirm --needed aria2
  # Download unfinished jobs
  #[ -f "$LIST" ] && echo "Downloading unfinished jobs." && aria2c $ARIA2C
  clean

  # Create new jobs
  name=$(pacman $@ --print --print-format "%n")
  namever=$(pacman $@ --print --print-format "%n-%v")
  total=$(pacman $@ --print --print-format "%s" | awk '{size+=$test} END {print size}')
  list=$(pacman $@ --print --print-format "%l" | grep -E -o -e "(ht|f)tp[s]?://[^\']+")
  repository=$(pacman $@ --print --print-format "%r")
  number=$(echo "$namever" | wc -l)
  
  
suffix='B'
if [ $( echo "$total > 1024" | bc ) = 1 ]; then
        total=$( echo "scale=2; $total / 1024" | bc )
        suffix='KiB'
        if [ $( echo "$total > 1024" | bc ) = 1 ]; then
                total=$( echo "scale=2; $total / 1024" | bc )
                suffix='MiB'
		if [ $( echo "$total > 1024" | bc ) = 1 ]; then
		        total=$( echo "scale=2; $total / 1024" | bc )
		        suffix='GiB'
		fi
	fi
fi
  #echo -e "\n\e[1;42m Downloading: \e[0m" "\n" $number | fmt -c -w $COLUMNS #-c

NC='\033[0m' # No Color
On_White='\e[1;30;107m'
On_Green='\e[1;97;42m'

echo -e "\n\e ${On_Green} Downloading: ${On_White} $number Package(s) for total size $total $suffix \e[0m" "\n" $namever


RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
NORMAL=$(tput sgr0)

col=80 # change this to whatever column you want the output to start at

if <some condition here>; then
  printf '%s%*s%s' "$GREEN" $col "[OK]" "$NORMAL"
else
  printf '%s%*s%s' "$RED" $col "[FAIL]" "$NORMAL"
fi
  
  
  #echo "Total size of installed packages is $total $suffix"
  #echo $list
  
  #log_msg "Hello World"
  #printf "%5s  " $namever
  #echo "  " $namever

exit 1

  #center "Something I want to print"

  #pacman $@ --print --print-format "%l" | grep -E -o -e "(ht|f)tp[s]?://[^\']+" | tee "$LIST" >/dev/null && aria2c $ARIA2C
  list=$(pacman $@ --print --print-format "%l" | grep -E -o -e "(ht|f)tp[s]?://[^\']+")
  aria2c $list $ARIA2C
  printf "%s\r%s%s" xyzzyxyzzyxyzzyxyzzy $(tput el) "Download finished"
  
  # Install package
  echo -e "\n\n\e[1;42m Installing: \e[0m" "$@" | sed "$SED"
  pacman $(echo "$1" | sed "s/y//g") ${@:2} #&& rm -f "$LIST" && exit 0
  exit 1
fi
