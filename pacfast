#!/bin/bash

PacmanCache=$(pacman-conf Cachedir)
SED='s/-S//g;s/yyu/Update system/g;s/-b . yw//g;s/--noconfirm//g;s/--needed//g'
ARIA2C="-d "$PacmanCache" -Z -c -s4 -k5M -x10 -j10 -t10 \
	--console-log-level=error --download-result=hide  --file-allocation=falloc --summary-interval=0 --retry-wait=0"

trap ctrl_c INT

function ctrl_c() {
  clean
  exit 0
}

function clean() {
  find "$PacmanCache" -type f -name "*.aria2" | while read f ; do
  name=$(basename "$f" .aria2)
  rm -f "$PacmanCache$name" "$f" #2>/dev/null #>/dev/null 2>&1
  done
}

function print() (
  c1width=10
  cols=$(tput cols)
  c2width=$((cols - c1width - 1))
  readarray -t lines < <(printf '%s' "$2" | fmt -w $c2width)
  for((line=0; line < ${#lines[*]}; line++))
  do
    if [ $line -eq 0 ]
    then
      col1="$1"
    else
      col1=" "
    fi
    printf "%-${c1width}s %-${c2width}s\n" "$col1" "${lines[line]}"
  done
)

aria_get_rpc_gid(){
    /usr/bin/xmlrpc http://localhost:6800/rpc aria2.tellActive 2> $METAFILE.err > $METAFILE.rpc
    ARIA2_GID=$(cat $METAFILE.rpc | grep "gid" -A1 -m1| grep Value | awk -F"'" '{print $2}')
    export ARIA2_GID
}

aria_monitor_log(){
    FILE=$1

    DONE=0
    while [ $DONE -lt 1 ]
    do              
        if [ -z "${ARIA2_GID}" ]
        then
            aria_get_rpc_gid $FILE
            #p_comment 0 "Download indentifier is: ${ARIA2_GID}"
        fi

        if [ -n "${ARIA2_GID}" ]
        then
            PROGRESS=$(aria_get_rpc_progress $FILE)
            SPEED=$(aria_get_rpc_speed $FILE)
            case $PROGRESS in
                    *100*)
                            #p_comment 0  "Done with downloading file"
                            DONE=1
                    ;;                                                              

                    *)
                            #p_comment 0 "Downloading: ${PROGRESS} percent at ${SPEED} bytes/sec"
                            sleep 5
                    ;;
            esac
        else
            #p_comment 0 "Unable to determine download progress, sleeping for 10 seconds before retrying"
            sleep 10
        fi
    done 
}

if ping -c 1 -W 1 8.8.8.8 2>/dev/null | grep -q -i "ttl"; then
  ARIA2C="$ARIA2C --async-dns-server=8.8.8.8"
fi

if [ "$OSTYPE" = "linux-gnu" ]; then
	[ "`whoami`" = "root" ] || exec sudo "$0" "$@"
fi

if [ $(command -v pacman) ] && echo "$@" | grep -q "\-S"; then
  [ $(command -v aria2c) ] || pacman -S --noconfirm --needed aria2
  # Download unfinished jobs
  #[ -f "$LIST" ] && echo "Downloading unfinished jobs." && aria2c $ARIA2C
  clean

  # Create new jobs
  list=$(pacman $@ --print --print-format "%l" | grep -E -o -e "(ht|f)tp[s]?://[^\']+")
  name=$(pacman $@ --print --print-format "%n")
  namever=$(pacman $@ --print --print-format "%n-%v")
  total=$(pacman $@ --print --print-format "%s" | awk '{size+=$name} END {print size}')
  repository=$(pacman $@ --print --print-format "%r")
  number=$(echo "$name" | wc -l)
  
suffix='B'
if [ $( echo "$total > 1024" | bc ) = 1 ]; then
        total=$( echo "scale=2; $total / 1024" | bc )
        suffix='KiB'
        if [ $( echo "$total > 1024" | bc ) = 1 ]; then
                total=$( echo "scale=2; $total / 1024" | bc )
                suffix='MiB'
		if [ $( echo "$total > 1024" | bc ) = 1 ]; then
		        total=$( echo "scale=2; $total / 1024" | bc )
		        suffix='GiB'
		fi
	fi
fi

  NC='\033[0m' # No Color
  On_White='\e[1;30;107m'
  On_Green='\e[1;97;42m'

  echo -e "\n\e ${On_Green} PacFast ${On_White} Downloading $number Package(s) for a total size of $total $suffix \e[0m"
  optd=$(echo $namever | xargs -n1 | sort | xargs | column -t)
  print "$optf" "$optd" && echo " "
  
  metafile=$1
  metafile_log=/tmp/aria.log
    save_param ARIA_LOG /tmp/aria.log
  aria2c $list -d "$PacmanCache" --enable-rpc --human-readable=false $metafile &> $metafile_log & #$ARIA2C
 pid=$!
    if [ ! -d /proc/$pid ]; then
         logmsg "aria2c is not running"
         shellout
    fi

    cntr=0

    while : ; do
        if [ -e $metafile_log ]; then
    	    aria_monitor_log $metafile_log
            break
        else
            cntr=$(($cntr+1))
            sleep 5
        fi

        if [ $cntr -gt 5 ]; then
            logmsg "Logfile could not be located, something is wrong!"
            shellout
        fi
    done
  
  printf "%s\r%s%s" abcdefghijklmnopqrstuvwxyz $(tput el) "Download finished"
  
  # Install package
  echo -e "\n\n\e[1;42m Installing: \e[0m" "$@" | sed "$SED"
  pacman $(echo "$1" | sed "s/y//g") ${@:2}
  exit 1
fi
